name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            ext: tar.gz
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: tar.gz
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package
        run: |
          mkdir -p dist
          BIN="coto${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          PACKAGE="coto-${{ matrix.target }}.${{ matrix.ext }}"
          if [[ "${{ matrix.ext }}" == "zip" ]]; then
            zip -j dist/$PACKAGE target/${{ matrix.target }}/release/$BIN
          else
            tar czf dist/$PACKAGE -C target/${{ matrix.target }}/release $BIN
          fi

      - name: Create GitHub Release
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*

      - name: Upload assets
        if: matrix.os != 'ubuntu-latest
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/*
